{"version":3,"sources":["components/Alert.js","components/ClassCounter.js","components/ClassCounterLifeCycle.js","components/Navbar.js","components/TextArea.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","react_default","a","createElement","className","concat","type","role","word","toLower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","Component","Navbar","mode","href","text","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","home","onClick","toggleMode","htmlFor","TextArea","_useState","useState","_useState2","Object","slicedToArray","setText","style","color","value","onChange","event","console","log","target","height","backgroundColor","for","showAlert","newtext","document","getElementById","select","navigator","clipboard","writeText","split","length","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","Fragment","about","body","title","components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.2d8a5561.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    \r\n    const capitalize = (word) => {\r\n        const toLower = word.toLowerCase()\r\n        return toLower.charAt(0).toUpperCase()+toLower.slice(1)\r\n    }\r\n    \r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import React, { Component } from 'react'\r\n\r\nclass ClassCounter extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            count: 0\r\n        }\r\n    }\r\n\r\n    incrementCount = () => {\r\n        // this.setState ({\r\n        //     count: this.state.count + 1\r\n        // },\r\n        // () => {\r\n        // console.log('callback console log statement executed with count:',this.state.count)\r\n        // })\r\n        // console.log('Synchronous console log statement executed with count:',this.state.count);\r\n\r\n        this.setState((prevState) => {\r\n            return{\r\n                count: prevState.count + 1\r\n            }\r\n            \r\n        })\r\n        console.log('Synchronous console log statement executed with count:',this.state.count);\r\n\r\n    }\r\n    \r\n    incrementTwo() {\r\n        this.incrementCount()\r\n        this.incrementCount()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <button onClick={() => this.incrementTwo()}>Count {this.state.count}</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ClassCounter\r\n","import React, { Component } from 'react'\r\n\r\nclass ClassCounterLifeCycle extends Component {\r\n    constructor(props) {\r\n      super(props)\r\n    \r\n      this.state = {\r\n         count: 0\r\n      }\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = `Clicked ${this.state.count} times`\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        document.title = `Clicked ${this.state.count} times`\r\n    }\r\n    \r\n  render() {\r\n    return (\r\n      <div>\r\n        <button onClick={() => this.setState({count: this.state.count + 1})}>\r\n            Click {this.state.count} times</button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ClassCounterLifeCycle\r\n","import React from 'react'\r\n// import { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <div>\r\n            <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n                <div className=\"container-fluid\">\r\n                    <a className=\"navbar-brand\" href=\"#\">{props.text}</a>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">{props.home}</a>\r\n                            </li>\r\n                            {/* <li className=\"nav-item\">\r\n                                <a className=\"nav-link\" href='#'>{props.about}</a>\r\n                            </li> */}\r\n                        </ul>\r\n                        <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n                            <input className=\"form-check-input\" onClick = {props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n                            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable {props.mode==='light'?'dark':'light'} Mode</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React, { useState } from 'react'\r\n\r\n\r\n\r\nexport default function TextArea(props) {\r\n\r\n    const [text, setText] = useState(\"This is the default text\")\r\n\r\n    const handleOnChange = (event) => {\r\n        console.log(\"onChange Invoked\")\r\n        setText(event.target.value)\r\n    }\r\n\r\n    const handleUpClick = () => {\r\n       const newText = text\r\n       setText(newText.toUpperCase())\r\n       props.showAlert(\"Changed to Uppercase!\",\"success\")\r\n    }\r\n\r\n    \r\n    const handleLoClick = () => {\r\n        const newText = text\r\n        setText(newText.toLowerCase())\r\n        props.showAlert(\"Changed to lowercase!\",\"success\")\r\n    }\r\n\r\n    const handleClear = () => {\r\n        setText(\"\")\r\n        props.showAlert(\"Cleard the text!\",\"success\")\r\n    }\r\n\r\n\r\n    const handleCopy = () => {\r\n        var newtext = document.getElementById(\"floatingTextarea\")\r\n        console.log(newtext.value)\r\n        newtext.select();\r\n        navigator.clipboard.writeText(newtext.value);\r\n        props.showAlert(\"Copied to clipboard\",\"success\")\r\n    }\r\n \r\n\r\n\r\n    return (\r\n        <div className='container' style={{color: props.mode==='dark'?'white':'black'}}>\r\n            <h2>Analyze Your Text</h2>\r\n            <div className=\"form-floating\" >\r\n                <textarea className=\"form-control\" value={text} onChange={handleOnChange} id=\"floatingTextarea\" style={{height: '245px',backgroundColor: props.mode==='dark'?'grey':'white',color: props.mode==='dark'?'white':'black'}} ></textarea>\r\n                <label for=\"floatingTextarea\">Enter your statements</label>\r\n            </div>\r\n            <button className=\"btn btn-primary my-2 mx-1\" onClick={handleUpClick}>Convert To UpperCase</button>\r\n            <button className=\"btn btn-primary my-2 mx-1\" onClick={handleLoClick}>Convert To LowerCase</button>\r\n            <button className=\"btn btn-primary my-2 mx-1\" onClick={handleCopy}>Copy Text</button>\r\n            <button className=\"btn btn-primary my-2 mx-1\" onClick={handleClear}>Clear Text</button>\r\n            <div>\r\n                <h1>Your Text Summary</h1>\r\n                words {text.split(\" \").length} and characters {text.length}<br />\r\n                {0.008 * text.length} Minutes read\r\n                <h2>Preview</h2>\r\n                <div>\r\n                    {text.length>0?text:\"Enter some text above in the textbox to preview\"}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","\nimport React, { useState } from 'react';\nimport './App.css';\nimport About from './components/About';\nimport Alert from './components/Alert';\nimport ClassCounter from './components/ClassCounter';\nimport ClassCounterLifeCycle from './components/ClassCounterLifeCycle';\nimport HookCounter from './components/HookCounter';\nimport HookCounterArray from './components/HookCounterArray';\nimport HookCounterObject from './components/HookCounterObject';\nimport Navbar from './components/Navbar';\nimport TextArea from './components/TextArea';\nimport UseEffectHookCounter from './components/UseEffectHookCounter';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Routes,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null)\n    }, 1800)\n  }\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark')\n      document.body.style.backgroundColor = '#183360'\n      showAlert(\"dark mode enabled\", \"success\")\n      document.title = \"TextUtils - Dark mode\"\n    } else {\n      setMode('light')\n      document.body.style.backgroundColor = 'white'\n      showAlert(\"light mode enabled\", \"success\")\n      document.title = \"TextUtils - Light mode\"\n    }\n  }\n\n  return (\n    <>\n      {/* <Router> */}\n        <Navbar text=\"TextUtils\" home=\"Home\" about=\"About\" mode={mode} toggleMode={toggleMode} />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          {/* <Routes>\n            <Route exact path=\"/about\" element={<About />} />\n\n            <Route exact path=\"/\" element={<TextArea showAlert={showAlert} mode={mode} />} />\n          </Routes> */}\n\n          {/* <About /> */}\n          <TextArea showAlert={showAlert} mode={mode} />\n        </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}